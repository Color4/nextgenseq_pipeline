rule HAPCALLER:
	input: 	
		bam="{subject}/{TIME}/{sample}/{sample}.bwa.final.bam",
		bai="{subject}/{TIME}/{sample}/{sample}.bwa.final.bam.bai",
		ref=config["reference"],
		dbsnp=config["dbsnp"],
		interval=lambda wildcards: config['target_intervals'][config['sample_captures'][wildcards.sample]].replace("target", "targetbp"),
	output:
		vcf="{subject}/{TIME}/{sample}/calls/{sample}.HC_DNASeq.raw.vcf"
	version: config["GATK"]
	params:
		rulename = "HC",
		batch    = config[config['host']]["job_HC"],
		sentieon  = config["sentieon"]
	shell: """
	#######################
	module load GATK/{version}
	set +eo pipefail
	module -q load {params.sentieon} 2>/dev/null
	set -eo pipefail
	if [ $? == '0' ] ; then
		echo "Using Sentieon"
		sentieon driver -t ${{THREADS}} -r {input.ref} -i {input.bam} --interval {input.interval} --algo Haplotyper -d {input.dbsnp} --min_base_qual 20 --min_map_qual 30  {output.vcf}
	else
		java -Xmx${{MEM}}g -Djava.io.tmpdir=${{LOCAL}} -jar $GATK_JAR -T HaplotypeCaller -R {input.ref} -I {input.bam} -L {input.interval} -o {output.vcf} --dbsnp {input.dbsnp} -mbq 20 -mmq 30
	fi
	#######################
	"""
